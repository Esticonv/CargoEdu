version: '3.4'

services:
  r7p.orderservice.webapi:
    image: ${DOCKER_REGISTRY-}r7porderservicewebapi
    build:
      context: .
      dockerfile: src/OrderService/R7P.OrderService.WebApi/Dockerfile
    ports:
     - "5000:8080"
    depends_on:
     - "r7p_postgres"
    networks:
      - aspnetcoreapp-network

  r7p_postgres:
    container_name: 'postgres'
    image: postgres
    environment:      
      POSTGRES_PASSWORD: Qwerty1!
    networks:
      - aspnetcoreapp-network

  r7p.machinemanagerservice.webapi:
   image: ${DOCKER_REGISTRY-}r7p-machinemanagerservice-webapi
   build:
     context: .
     dockerfile: src/MachineManagerService/WebApi/Dockerfile
   ports:
    - "5001:8080"
   depends_on:
    - "r7p_postgres"
   networks:
     - aspnetcoreapp-network

  r7p.machinemanagerservice.simulator:
   image: ${DOCKER_REGISTRY-}r7p-machinemanagerservice-simulator
   build:
     context: .
     dockerfile: src/MachineManagerService/WebSimulator/Dockerfile
   ports:
    - "5002:8080"
   networks:
     - aspnetcoreapp-network

  r7p.deliverycalculationservice.webapi:
   image: ${DOCKER_REGISTRY-}r7p-deliverycalculationservice-webapi
   build:
     context: .
     dockerfile: src/DeliveryCalculationService/R7P.DeliveryCalculationService.WebApi/Dockerfile
   ports:
    - "5003:8080"
   networks:
     - aspnetcoreapp-network

networks:
  aspnetcoreapp-network:
    driver: bridge